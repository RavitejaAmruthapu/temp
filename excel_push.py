import pandas as pd
import json
import requests
import base64
import os
import sys
import openpyxl as pxl

#Required parameters check to pass to script
if len(sys.argv) != 6:
    print("Usage, script <artifactory repo name> <folder path to download latest releasenotes> <artifactory username> <artifactory pasword/apiKey/encrypted password> <component name>")
    print("sample artifactory url https://artifactrepository.citigroup.net:443/artifactory/generic-icg-tts-3rdparty-dev-local/com/citi/test/9/Release-Notes.xlsx")
    print("https://artifactrepository.citigroup.net:443/artifactory/<repo name>/<folderpath>/9/Release-Notes.xlsx")
    sys.exit(1)

repoName = sys.argv[1]
folderPath = sys.argv[2]
artUsername = sys.argv[3]
artPassword = sys.argv[4]
COMPONENT_NAME = sys.argv[5]#sheet will be created with the component name

FILE_NAME = "Release-Notes-"+COMPONENT_NAME+".csv"
def downloadConReleasenotes(repoName,folderPath):
    url="https://artifactrepository.citigroup.net/artifactory/api/storage/"+ repoName + "/" + folderPath + "/?lastModified"
    print(url)
    try:
        response = requests.get(url,verify=False,auth=(artUsername, artPassword))
        resp = response.content
        resp = resp.decode('utf-8')
        resp = json.loads(resp)
        downloadUri = resp['uri']
        responseFileUrl = requests.get(downloadUri,verify=False,auth=(artUsername, artPassword))
        responseFileUrl = responseFileUrl.content
        responseFileUrl = responseFileUrl.decode('utf-8')
        responseFileUrl = json.loads(responseFileUrl)
        resp = responseFileUrl
        downloadFileUri = responseFileUrl['downloadUri']
        file = requests.get(downloadFileUri,verify=False,auth=(artUsername, artPassword))
        if os.path.exists("Release-Notes.xlsx"):
            print("Deleting old consolidated release notes")
            os.remove("Release-Notes.xlsx")
        with open("Release-Notes.xlsx","wb") as f:
            print("Downloading latest consolidated release notes from " + folderPath + " and repo is " + repoName)
            f.write(file.content)
            print("Downloaded latest consolidated release notes from uri: " +downloadFileUri)
        #generating consolidated release notes
        generateConReleasenotes()
        return downloadFileUri    
    except KeyError as err:
        print("Could not able to find the folder " +folderPath +" in repo " + repoName)
        print(str(resp['errors'][0]['status']) + ": " + resp['errors'][0]['message'])
        exit(1)
def generateConReleasenotes():
    if os.path.exists(FILE_NAME):
        print("reading " + FILE_NAME +" generated by release-notes.py")
        read_file = pd.read_csv(FILE_NAME)
        excel_book = pxl.load_workbook('Release-Notes.xlsx')
        with pd.ExcelWriter('Release-Notes.xlsx', engine='openpyxl') as writer:
            writer.book = excel_book
            writer.sheets = {
                worksheet.title: worksheet
                for worksheet in excel_book.worksheets
                }
            read_file.to_excel (writer, COMPONENT_NAME, index=False)
            writer.save()
    else:
        print(FILE_NAME +" not generated by release-notes.py, hence exiting")
        exit(1)

def pushConReleasenotes():
    downloadFileUri = downloadConReleasenotes(repoName,folderPath)
    version = downloadFileUri.split('/')
    counter = version[len(version)-2]
    counter = int(counter) + 1
    url = "https://artifactrepository.citigroup.net:443/artifactory/"+ repoName + "/" + folderPath + "/" + str(counter) + "/Release-Notes.xlsx"
    with open('Release-Notes.xlsx', 'rb') as f:
        resp = requests.put(url, data=f,verify=False,auth=(artUsername, artPassword))
        if resp.status_code == 201:
            print(str(resp.status_code)+ ": Successfully pushed the consolidated release notes to artifactory!")
            print("Download from below url......")
            print(url)
        else:
            print(str(resp.status_code)+ ": Failed to push the consolidated release notes.....")
            print(resp.content.decode("utf-8"))
            exit(1)
pushConReleasenotes()
